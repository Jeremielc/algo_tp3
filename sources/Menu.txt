char c;
    do {
        printf("Commande ? ");
        c = getchar();
        switch(c)
        {
            case 'h' :
                printf("\nAide : \n");
                printf("a : Affichage des mots de l'arbre par ordre alphabÃ©tique \n");
                printf("r : Recherche d'un mot \n");
                printf("i : Insertion d'un mot \n");
                printf("s : Suppression d'un mot \n");
                printf("c : Chargement d'un fichier \n");
                printf("d : Destruction de l'arbre \n");
                printf("q : Quitter \n");
                break;
                
            case 'a' :
                break;
                
            case 'r' :
                break;
                
            case 'i' :
                break;
                
            case 's' :
                break;
                
            case 'c' :
                break;
                
            case 'd' :
                break;
                
            case 'q' : exit(0);
                break;
        }
        printf("\n"); c = getchar();
    }
    while (1);

/**
 * Fonctions rÃ©cursives de recherche et d'insertions d'un mot
 **/

bool search_word(NOEUD *p, char *w) {
    if(p == NULL || w == NULL)
        return 0;
    
    
    // Pour chaque noeud
    for (;p !=NULL; p = p->frere)
    {
        if(*w == '\0' && p->valeur == '\0')
            return 1;
        if(p->valeur == *w){
            return search_word(p->fils,w+1);
        }
    }
    return 0;
}